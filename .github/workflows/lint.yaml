name: üìù Linter

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install Dependencies and Check Formatting
        run: |
          yarn install --frozen-lockfile
          yarn lint

  backend:
    name: Backend Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v2
        name: Cache Rust Build
        with:
          shared-key: tauri-build-ubuntu-latest
          workspaces: src-tauri

      - name: Check Rust formatting
        run: |
          cd src-tauri/
          cargo fmt --all --check

  backend-linter:
    name: Backend Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install NPM Dependencies
        run: |
          yarn install --frozen-lockfile
          yarn build

      - uses: Swatinem/rust-cache@v2
        name: Cache Rust Build
        with:
          shared-key: tauri-build-${{ matrix.platform }}
          workspaces: src-tauri

      - uses: actions-rs/clippy-check@v1
        name: Rust Linting - Clippy
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path src-tauri/Cargo.toml
